name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Bump version
        id: bump_version
        run: |
          # 获取最近的 tag，没有则默认 v0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0")
          echo "Latest tag: $LATEST_TAG"
          # 去除前缀 v，获得纯数字部分
          VERSION_NUMBER=${LATEST_TAG#v}
          # 自增版本号（简单数字加1，若有语义化需求请自行调整）
          NEW_VERSION=$((VERSION_NUMBER + 1))
          NEW_TAG="v${NEW_VERSION}"
          echo "New tag: $NEW_TAG"
          echo "new_tag=${NEW_TAG}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: "Release ${{ steps.bump_version.outputs.new_tag }}"
          draft: false
          prerelease: false

  build:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.4'

      - name: Build binary for ${{ matrix.goos }} ${{ matrix.goarch }}
        run: |
          # 获取当前 commit 的短 hash，用于生成文件名
          HASH=$(git rev-parse --short HEAD)
          echo "HASH=${HASH}" >> $GITHUB_ENV
          echo "Building for GOOS=${{ matrix.goos }}, GOARCH=${{ matrix.goarch }}, commit hash: ${HASH}"
          # 设置环境变量后调用 make build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make build

      - name: Upload Release Asset for ${{ matrix.goos }}_${{ matrix.goarch }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_url }}
          asset_path: ./bin/skywalking-go-agent-${{ env.HASH }}-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: skywalking-go-agent-${{ env.HASH }}-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
